{"version":3,"sources":["components/Display.js","components/Panel.js","data/functions.js","data/numbers.js","components/Calc.js","App.js","serviceWorker.js","index.js"],"names":["Display","props","className","id","fe","ce","Panel","btns","functions","numbers","funcs","map","item","idx","Button","key","onClick","click","symbol","nums","value","Calc","state","reverse","addedDecimal","addedOperator","showingResult","fullExp","currentExp","handleClick","bind","handleSymbol","this","setState","e","type","target","classList","innerText","handleNumber","val","clear","handleOperator","handlePeriod","equals","test","substring","length","slice","callback","res","s","match","op","n","parseFloat","reduce","acc","curr","operate","toFixed","n1","n2","Component","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.03f8ad2d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Display(props) {\r\n    return (\r\n        <div className=\"display\">\r\n            <div id=\"fe\">\r\n                {props.fe}\r\n            </div>\r\n            <div id=\"display\">\r\n                {props.ce}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport default function Panel(props) {\r\n    const { functions, numbers } = props.btns;\r\n\r\n    const funcs = functions.map((item, idx) => {\r\n        return <Button id={item.id} className=\"function\" key={\"f\" + idx} onClick={props.click} >{item.symbol}</Button>\r\n    });\r\n\r\n    const nums = numbers.map((item, idx) => {\r\n        return <Button id={item.id} className=\"number\" key={\"n\" + idx} onClick={props.click} >{item.value}</Button>\r\n    });\r\n\r\n    return (\r\n        <div id=\"panel\">\r\n            {funcs}\r\n            {nums}\r\n        </div>\r\n    )\r\n}\r\n","export default [\r\n    {\r\n        id: \"clear\",\r\n        symbol: \"AC\"\r\n    },\r\n    {\r\n        id: \"divide\",\r\n        symbol: \"/\"\r\n    },\r\n    {\r\n        id: \"multiply\",\r\n        symbol: \"x\"\r\n    },\r\n    {\r\n        id: \"subtract\",\r\n        symbol: \"-\"\r\n    },\r\n    {\r\n        id: \"add\",\r\n        symbol: \"+\"\r\n    },\r\n    {\r\n        id: \"equals\",\r\n        symbol: \"=\"\r\n    },\r\n    {\r\n        id: \"decimal\",\r\n        symbol: \".\"\r\n    }\r\n];","export default [\r\n    {\r\n        id: \"zero\",\r\n        value: 0\r\n    },\r\n    {\r\n        id: \"one\",\r\n        value: 1\r\n    },\r\n    {\r\n        id: \"two\",\r\n        value: 2\r\n    },\r\n    {\r\n        id: \"three\",\r\n        value: 3\r\n    },\r\n    {\r\n        id: \"four\",\r\n        value: 4\r\n    },\r\n    {\r\n        id: \"five\",\r\n        value: 5\r\n    },\r\n    {\r\n        id: \"six\",\r\n        value: 6\r\n    },\r\n    {\r\n        id: \"seven\",\r\n        value: 7\r\n    },\r\n    {\r\n        id: \"eight\",\r\n        value: 8\r\n    },\r\n    {\r\n        id: \"nine\",\r\n        value: 9\r\n    },\r\n];","import React, { Component } from 'react';\r\n\r\nimport Display from './Display';\r\nimport Panel from './Panel';\r\n\r\nimport functions from '../data/functions';\r\nimport numbers from '../data/numbers';\r\n\r\nexport default class Calc extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            functions: functions,\r\n            numbers: numbers.reverse(),\r\n            addedDecimal: false,\r\n            addedOperator: false,\r\n            showingResult: false,\r\n            fullExp: \"0\",\r\n            currentExp: \"0\"\r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleSymbol = this.handleSymbol.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            addedDecimal: false,\r\n            addedOperator: false,\r\n            showingResult: false,\r\n            fullExp: \"0\",\r\n            currentExp: \"0\"\r\n        });\r\n    }\r\n\r\n    handleClick(e) {\r\n        let type = e.target.classList[0];\r\n        let value = e.target.innerText;\r\n\r\n        type === \"number\" ? this.handleNumber(value) : this.handleSymbol(value);\r\n    }\r\n\r\n    handleNumber(val) {\r\n        if (this.state.showingResult) {\r\n            this.clear();\r\n        }\r\n        if (this.state.currentExp === \"0\" && val !== \"0\") {\r\n            if (this.state.fullExp === \"0\") {\r\n                this.setState(state => ({\r\n                    fullExp: val,\r\n                    currentExp: val\r\n                }));\r\n            } else {\r\n                this.setState(state => ({\r\n                    fullExp: state.fullExp + val,\r\n                    currentExp: val\r\n                }));\r\n            }\r\n        } else if (this.state.currentExp !== \"0\") {\r\n            this.setState(state => ({\r\n                fullExp: state.fullExp + val,\r\n                currentExp: state.currentExp + val\r\n            }));\r\n        }\r\n    }\r\n\r\n    handleSymbol(val) {\r\n        if (this.state.showingResult) {\r\n            this.setState(state => ({\r\n                showingResult: false,\r\n                fullExp: \"\" + state.currentExp\r\n            }));\r\n        }\r\n\r\n        switch (val) {\r\n            case \"AC\":\r\n                this.clear();\r\n                break;\r\n            case \"/\":\r\n            case \"x\":\r\n            case \"-\":\r\n            case \"+\":\r\n                this.handleOperator(val);\r\n                break;\r\n            case \".\":\r\n                this.handlePeriod();\r\n                break;\r\n            case \"=\":\r\n                this.equals();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleOperator(val) {\r\n        let { fullExp } = this.state;\r\n\r\n        if (this.state.addedOperator && val !== \"-\") {\r\n            if (!/\\d/.test(fullExp.substring(fullExp.length - 1))) {\r\n                if (!/\\d/.test(fullExp.substring(fullExp.length - 2))) {\r\n                    this.setState(state => ({\r\n                        fullExp: state.fullExp.slice(0, -2) + val,\r\n                        currentExp: val\r\n                    }));\r\n                } else {\r\n                    this.setState(state => ({\r\n                        fullExp: state.fullExp.slice(0, -1) + val,\r\n                        currentExp: val\r\n                    }));\r\n                }\r\n            } else if (fullExp.substring(fullExp.length - 1) !== \"-\") {\r\n                this.setState(state => ({\r\n                    fullExp: state.fullExp + val,\r\n                    currentExp: val,\r\n                    addedOperator: true,\r\n                    addedDecimal: false\r\n                }));\r\n            }\r\n        } else if (fullExp.substring(fullExp.length - 1) !== \"-\") {\r\n            this.setState(state => ({\r\n                fullExp: state.fullExp + val,\r\n                currentExp: val,\r\n                addedOperator: true,\r\n                addedDecimal: false\r\n            }));\r\n        }\r\n    }\r\n\r\n    handlePeriod() {\r\n        if (!this.state.addedDecimal) {\r\n            if (/\\d/.test(this.state.fullExp.slice(-1))) {\r\n                this.setState(state => ({\r\n                    addedDecimal: true,\r\n                    fullExp: state.fullExp + \".\",\r\n                    currentExp: state.currentExp + \".\"\r\n                }));\r\n            } else {\r\n                if (this.state.fullExp !== \"0\") {\r\n                    this.setState(state => ({\r\n                        addedDecimal: true,\r\n                        fullExp: state.fullExp + \"0.\",\r\n                        currentExp: state.currentExp + \"0.\"\r\n                    }));\r\n                } else {\r\n                    this.setState(state => ({\r\n                        addedDecimal: true,\r\n                        fullExp: state.fullExp + \".\",\r\n                        currentExp: state.currentExp + \".\"\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    equals(callback, val) {\r\n        const s = this.state.fullExp;\r\n        let res;\r\n\r\n        let numbers = s.match(/-{0,1}\\d+\\.*\\d*/g);\r\n        let op = s.match(/[^.\\d]/g) || [];\r\n\r\n        op = op.map(val => val === \"-\" ? \"+\" : val);\r\n\r\n        numbers = numbers.map(n => parseFloat(n));\r\n\r\n        let test = numbers;\r\n\r\n        if (numbers.length > 1) {\r\n            res = test.reduce((acc, curr, idx) => {\r\n                return this.operate(acc, curr, op[idx - 1]);\r\n            });\r\n        } else {\r\n            res = numbers[0];\r\n        }\r\n\r\n        res = parseFloat(res.toFixed(6));\r\n\r\n        this.setState(state => ({\r\n            fullExp: state.fullExp + \"=\" + res,\r\n            currentExp: res,\r\n            showingResult: true,\r\n            addedOperator: false,\r\n            addedDecimal: false\r\n        }), callback ? callback(val) : null);\r\n    }\r\n\r\n    operate(n1, n2, op) {\r\n        switch (op) {\r\n            case \"/\":\r\n                return n1 / n2;\r\n            case \"x\":\r\n                return n1 * n2;\r\n            case \"-\":\r\n                return n1 - n2;\r\n            case \"+\":\r\n                return n1 + n2;\r\n            default:\r\n                return n1 + n2;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { functions, numbers, fullExp, currentExp } = this.state;\r\n\r\n        return (\r\n            <div id=\"calc\">\r\n\r\n                <Display fe={fullExp === \"0\" ? null : fullExp} ce={currentExp} />\r\n\r\n                <Panel btns={{ functions, numbers }} click={this.handleClick} />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\n\nimport Calc from './components/Calc';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.sass';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calc />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}